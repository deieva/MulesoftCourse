<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">
    <http:listener-config name="spotify-httpListenerConfig">
        <http:listener-connection host="0.0.0.0" port="8081" />
    </http:listener-config>
    <apikit:config name="spotify-config" api="spotify.raml" outboundHeadersMapName="outboundHeaders" httpStatusVarName="httpStatus" />
	<flow name="spotify-main">
        <http:listener config-ref="spotify-httpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <logger level="INFO" doc:name="Logger" doc:id="08225061-996f-4929-9f26-d36fb488e142" message='#["************ Log Router"]'/>
		<apikit:router config-ref="spotify-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Bad request"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">400</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Method not allowed"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">405</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not acceptable"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">406</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Unsupported media type"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">415</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_IMPLEMENTED">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Not Implemented"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">501</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="spotify-console">
        <http:listener config-ref="spotify-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <logger level="INFO" doc:name="Logger" doc:id="0e731c18-0b32-4236-bb2f-ab22fbcca134" message='#["************ Log Console"]'/>
		<apikit:console config-ref="spotify-config" />
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <ee:transform>
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{message: "Resource not found"}]]></ee:set-payload>
                    </ee:message>
                    <ee:variables>
                        <ee:set-variable variableName="httpStatus">404</ee:set-variable>
                    </ee:variables>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="put:\artists\(ID):spotify-config">
		<set-variable value="#[attributes.uriParams.'ID']" doc:name="store artistId" doc:id="87cec3c3-902c-4ab6-b521-5c59d1393448" variableName="artistId" />
		<set-variable value="#[payload]" doc:name="store new artist info" doc:id="f2a5ce3a-08fd-4445-8428-8403aa813826" variableName="artistObject" />
		<vm:publish-consume doc:name="sync: update artist info" doc:id="32dd2331-7197-4365-b74c-445503a20743" config-ref="VM_Config" queueName="artistInfo.toPut" target="updateResponse">
			<vm:content ><![CDATA[#[%dw 2.0

output application/json
---

{
	'artistID': vars.artistId,
	'artistINFO': vars.artistObject
}]]]></vm:content>
		</vm:publish-consume>
		<set-payload value="#[vars.updateResponse]" doc:name="Send out response" doc:id="639c46ac-d1f1-4144-8400-67017ff8f7cb" />
    </flow>
    <flow name="delete:\artists\(ID):spotify-config">
		<set-variable value="#[attributes.uriParams.'ID']" doc:name="store artistId" doc:id="7f89b387-d46a-4c91-a742-6f20fb377897" variableName="artistId" />
		<vm:publish-consume doc:name="sync: delete artist" doc:id="8440370d-bc3d-48d0-a30e-71d94ab1f31a" config-ref="VM_Config" queueName="artistId.toDelete">
			<vm:content ><![CDATA[#[vars.artistId
//sends out the variable]]]></vm:content>
		</vm:publish-consume>
    </flow>
    <flow name="get:\artists:spotify-config">
		<flow-ref doc:name="get all artists" doc:id="50df6e07-6877-4c49-8413-8ef42c7e1f91" name="getAllArtists"/>
    </flow>
    <flow name="get:\artists\(ID):spotify-config">
		<set-variable value="#[attributes.uriParams.'ID']" doc:name="store artistId" doc:id="41b2dbc5-842f-4794-9190-bf9a0c6f94d7" variableName="artistId"/>
		<vm:publish-consume doc:name="Sync: Get artist info by ID" doc:id="e6033cb7-baef-4b39-9091-2c7c77b047ff" queueName="artistId.toGet" config-ref="VM_Config">
			<vm:content ><![CDATA[#[vars.artistId]]]></vm:content>
		</vm:publish-consume>
    </flow>
    <flow name="post:\artists:application\json:spotify-config">
		<set-variable value="#[payload]" doc:name="store artist info" doc:id="a7fefdd7-74e2-4bd0-84e6-5f9ebce14212" variableName="artistObject"/>
		<vm:publish-consume doc:name="Sync: Create new artist" doc:id="c4189b57-23b2-47ce-9cda-c19d020e4278" config-ref="VM_Config" queueName="artistInfo.toPost">
			<vm:content ><![CDATA[#[vars.artistObject]]]></vm:content>
		</vm:publish-consume>
    </flow>
</mule>
